ggplot(data= first.dist)+                                              # specify data
geom_line(aes(x=x, y=beta.pdf, color="Beta(2,5)")) +                 # plot beta dist
geom_hline(yintercept=0)+                                            # plot x axis
theme_bw()+                                                          # change theme
xlab("x")+                                                           # label x axis
ylab("Density")+                                                     # label y axis
scale_color_manual("", values = c("black", "grey"))+                 # change colors
theme(legend.position = "bottom")                                    # move legend to bottom
#calculate mean, variance, skewness, excess kurtosis
mean.first <- alpha.first/(alpha.first+beta.first)
var.first <- (alpha.first*beta.first)/((alpha.first+beta.first)^2*
(alpha.first+beta.first+1))
skew.first <- (2*(beta.first-alpha.first)*sqrt(alpha.first+beta.first+1))/
((alpha.first+beta.first+2)*sqrt(alpha.first*beta.first))
kurt.first <- (6*((alpha.first-beta.first)^2*(alpha.first+beta.first+1) -
alpha.first*beta.first*(alpha.first+beta.first+2)))/
(alpha.first*beta.first*(alpha.first+beta.first+2)*(alpha.first+beta.first+3))
#compute the table for these variables
stats.first.tibble <- tibble(mean = mean.first,
variance = var.first,
skewness = skew.first,
excess_kurtosis = kurt.first)
#second case
alpha.second <- 5 #define alpha and beta
beta.second <- 5
#plot the distribution
second.dist <- tibble(x = seq(-0.25, 1.25, length.out=1000))|>   # generate a grid of points
mutate(beta.pdf = dbeta(x, alpha.second, beta.second))                      # compute the beta PDF
ggplot(data= second.dist)+                                              # specify data
geom_line(aes(x=x, y=beta.pdf, color="Beta(5,5)")) +                 # plot beta dist
geom_hline(yintercept=0)+                                            # plot x axis
theme_bw()+                                                          # change theme
xlab("x")+                                                           # label x axis
ylab("Density")+                                                     # label y axis
scale_color_manual("", values = c("black", "grey"))+                 # change colors
theme(legend.position = "bottom")                                    # move legend to bottom
#calculate mean, variance, skewness, excess kurtosis
mean.second <- alpha.second/(alpha.second+beta.second)
var.second <- (alpha.second*beta.second)/((alpha.second+beta.second)^2*
(alpha.second+beta.second+1))
skew.second <- (2*(beta.second-alpha.second)*sqrt(alpha.second+beta.second+1))/
((alpha.second+beta.second+2)*sqrt(alpha.second*beta.second))
kurt.second <- (6*((alpha.second-beta.second)^2*(alpha.second+beta.second+1) -
alpha.second*beta.second*(alpha.second+beta.second+2)))/
(alpha.second*beta.second*(alpha.second+beta.second+2)*(alpha.second+beta.second+3))
#compute the table for these variables
stats.second.tibble <- tibble(mean = mean.second,
variance = var.second,
skewness = skew.second,
excess_kurtosis = kurt.second)
#third case
alpha.third <- 5 #define alpha and beta
beta.third <- 2
#plot the distribution
third.dist <- tibble(x = seq(-0.25, 1.25, length.out=1000))|>   # generate a grid of points
mutate(beta.pdf = dbeta(x, alpha.third, beta.third))                      # compute the beta PDF
ggplot(data= third.dist)+                                              # specify data
geom_line(aes(x=x, y=beta.pdf, color="Beta(5,2)")) +                 # plot beta dist
geom_hline(yintercept=0)+                                            # plot x axis
theme_bw()+                                                          # change theme
xlab("x")+                                                           # label x axis
ylab("Density")+                                                     # label y axis
scale_color_manual("", values = c("black", "grey"))+                 # change colors
theme(legend.position = "bottom")                                    # move legend to bottom
#calculate mean, variance, skewness, excess kurtosis
mean.third <- alpha.third/(alpha.third+beta.third)
var.third <- (alpha.third*beta.third)/((alpha.third+beta.third)^2*
(alpha.third+beta.third+1))
skew.third <- (2*(beta.third-alpha.third)*sqrt(alpha.third+beta.third+1))/
((alpha.third+beta.third+2)*sqrt(alpha.third*beta.third))
kurt.third <- (6*((alpha.third-beta.third)^2*(alpha.third+beta.third+1) -
alpha.third*beta.third*(alpha.third+beta.third+2)))/
(alpha.third*beta.third*(alpha.third+beta.third+2)*(alpha.third+beta.third+3))
#compute the table for these variables
stats.third.tibble <- tibble(mean = mean.third,
variance = var.third,
skewness = skew.third,
excess_kurtosis = kurt.third)
#fourth case
alpha.fourth <- 0.5 #define alpha and beta
beta.fourth <- 0.5
#plot the distribution
fourth.dist <- tibble(x = seq(-0.25, 1.25, length.out=1000))|>   # generate a grid of points
mutate(beta.pdf = dbeta(x, alpha.fourth, beta.fourth))                      # compute the beta PDF
ggplot(data= fourth.dist)+                                              # specify data
geom_line(aes(x=x, y=beta.pdf, color="Beta(0.50,0.50)")) +                 # plot beta dist
geom_hline(yintercept=0)+                                            # plot x axis
theme_bw()+                                                          # change theme
xlab("x")+                                                           # label x axis
ylab("Density")+                                                     # label y axis
scale_color_manual("", values = c("black", "grey"))+                 # change colors
theme(legend.position = "bottom")                                    # move legend to bottom
#calculate mean, variance, skewness, excess kurtosis
mean.fourth <- alpha.fourth/(alpha.fourth+beta.fourth)
var.fourth <- (alpha.fourth*beta.fourth)/((alpha.fourth+beta.fourth)^2*
(alpha.fourth+beta.fourth+1))
skew.fourth <- (2*(beta.fourth-alpha.fourth)*sqrt(alpha.fourth+beta.fourth+1))/
((alpha.fourth+beta.fourth+2)*sqrt(alpha.fourth*beta.fourth))
kurt.fourth <- (6*((alpha.fourth-beta.fourth)^2*(alpha.fourth+beta.fourth+1) -
alpha.fourth*beta.fourth*(alpha.fourth+beta.fourth+2)))/
(alpha.fourth*beta.fourth*(alpha.fourth+beta.fourth+2)*(alpha.fourth+beta.fourth+3))
#compute the table for these variables
stats.fourth.tibble <- tibble(mean = mean.fourth,
variance = var.fourth,
skewness = skew.fourth,
excess_kurtosis = kurt.fourth)
#Task 2: compute the moments
#function that computes centered and uncentered moments
beta.moment <- function(alpha, beta, k, centered){
moment <- 0
if (centered == F){ #uncentered moments
moment <- integrate(function(x){x^k*dbeta(x, alpha, beta)},
lower = 0, upper = 1)$value
}else{ #centered moments
mu <- integrate(function(x){x*dbeta(x, alpha, beta)},
lower = 0, upper = 1)$value
moment <- integrate(function(x){(x- mu)^k *dbeta(x, alpha, beta)},
lower = 0, upper = 1)$value
}
return(moment)
}
#confirm the function is working by computing population-level characteristics
#compute for beta(2, 5) - values matched
beta.first.mean <- beta.moment(alpha.first, beta.first, 1, F) #compute mean
beta.first.var <- beta.moment(alpha.first, beta.first, 2, T) #compute variance
beta.first.skew <- beta.moment(alpha.first, beta.first, 3, T)/
(beta.moment(alpha.first, beta.first, 2, T))^(3/2) #compute skewness
beta.first.kurt <- beta.moment(alpha.first, beta.first, 4, T)/
(beta.moment(alpha.first, beta.first, 2, T))^(2) - 3 #compute excess kurtosis
#compute for beta(5, 5) - values matched
beta.second.mean <- beta.moment(alpha.second, beta.second, 1, F) #compute mean
beta.second.var <- beta.moment(alpha.second, beta.second, 2, T) #compute variance
beta.second.skew <- beta.moment(alpha.second, beta.second, 3, T)/
(beta.moment(alpha.second, beta.second, 2, T))^(3/2) #compute skewness
beta.second.kurt <- beta.moment(alpha.second, beta.second, 4, T)/
(beta.moment(alpha.second, beta.second, 2, T))^(2) - 3 #compute excess kurtosis
#compute for beta(5, 2) - values matched
beta.third.mean <- beta.moment(alpha.third, beta.third, 1, F) #compute mean
beta.third.var <- beta.moment(alpha.third, beta.third, 2, T) #compute variance
beta.third.skew <- beta.moment(alpha.third, beta.third, 3, T)/
(beta.moment(alpha.third, beta.third, 2, T))^(3/2) #compute skewness
beta.third.kurt <- beta.moment(alpha.third, beta.third, 4, T)/
(beta.moment(alpha.third, beta.third, 2, T))^(2) - 3 #compute excess kurtosis
#compute for beta(0.50, 0.50) - values matched
beta.fourth.mean <- beta.moment(alpha.fourth, beta.fourth, 1, F) #compute mean
beta.fourth.var <- beta.moment(alpha.fourth, beta.fourth, 2, T) #compute variance
beta.fourth.skew <- beta.moment(alpha.fourth, beta.fourth, 3, T)/
(beta.moment(alpha.fourth, beta.fourth, 2, T))^(3/2) #compute skewness
beta.fourth.kurt <- beta.moment(alpha.fourth, beta.fourth, 4, T)/
(beta.moment(alpha.fourth, beta.fourth, 2, T))^(2) - 3 #compute excess kurtosis
#Task 3
set.seed(7272) #set seed
#first distribution
sample.size <- 500 # Specify sample details
beta.first.sample <- rbeta(n = sample.size,  # sample size
shape1 = alpha.first,   # alpha parameter
shape2 = beta.first)    # beta parameter
#plot the histogram for distribution
beta.first.hist <- ggplot()+
geom_histogram(data = tibble(beta.first.sample), aes(x = beta.first.sample, y=after_stat(density)),
color = "black", fill = "lightgray")+ #plot histogram
#plot sample density
geom_density(data = tibble(beta.first.sample), aes(x = beta.first.sample, y=after_stat(density), color="BetaSample(2,5)"))+
#plot actual Beta density
geom_line(data = first.dist, aes(x = x, y=beta.pdf, color="Beta(2,5)"))+
theme_bw()+
labs(
title = "Histogram and Estimated Density of Beta Sample",
x = "Sample of Beta Distribution",
y = "Density"
)+
scale_color_manual( #complete the legend
name = "Density",
values = c("BetaSample(2,5)" = "red", "Beta(2,5)" = "blue"),
labels = c("Beta Population", "Beta Sample"))+
theme(legend.position = "bottom")
#include numerical summaries
beta.first.summary <- tibble(beta.first.sample) %>%
summarize(mean = mean(beta.first.sample),
variance = var(beta.first.sample),
skewness = skewness(beta.first.sample),
excess_kurtosis = kurtosis(beta.first.sample))
#second distribution
beta.second.sample <- rbeta(n = sample.size,  # sample size
shape1 = alpha.second,   # alpha parameter
shape2 = beta.second)    # beta parameter
#plot the histogram for distribution
beta.second.hist <- ggplot()+
geom_histogram(data = tibble(beta.second.sample), aes(x = beta.second.sample, y=after_stat(density)),
color = "black", fill = "lightgray")+ #plot histogram
#plot sample density
geom_density(data = tibble(beta.second.sample), aes(x = beta.second.sample, y=after_stat(density), color="BetaSample(5,5)"))+
#plot actual Beta density
geom_line(data = second.dist, aes(x = x, y=beta.pdf, color="Beta(5,5)"))+
theme_bw()+
labs(
title = "Histogram and Estimated Density of Beta Sample",
x = "Sample of Beta Distribution",
y = "Density"
)+
scale_color_manual( #complete the legend
name = "Density",
values = c("BetaSample(5,5)" = "red", "Beta(5,5)" = "blue"),
labels = c("Beta Population", "Beta Sample"))+
theme(legend.position = "bottom")
#include numerical summaries
beta.second.summary <- tibble(beta.second.sample) %>%
summarize(mean = mean(beta.second.sample),
variance = var(beta.second.sample),
skewness = skewness(beta.second.sample),
excess_kurtosis = kurtosis(beta.second.sample))
#third distribution
beta.third.sample <- rbeta(n = sample.size,  # sample size
shape1 = alpha.third,   # alpha parameter
shape2 = beta.third)    # beta parameter
#plot the histogram for distribution
beta.third.hist <- ggplot()+
geom_histogram(data = tibble(beta.third.sample), aes(x = beta.third.sample, y=after_stat(density)),
color = "black", fill = "lightgray")+ #plot histogram
#plot sample density
geom_density(data = tibble(beta.third.sample), aes(x = beta.third.sample, y=after_stat(density), color="BetaSample(5,2)"))+
#plot actual Beta density
geom_line(data = third.dist, aes(x = x, y=beta.pdf, color="Beta(5,2)"))+
theme_bw()+
labs(
title = "Histogram and Estimated Density of Beta Sample",
x = "Sample of Beta Distribution",
y = "Density"
)+
scale_color_manual( #complete the legend
name = "Density",
values = c("BetaSample(5,2)" = "red", "Beta(5,2)" = "blue"),
labels = c("Beta Population", "Beta Sample"))+
theme(legend.position = "bottom")
#include numerical summaries
beta.third.summary <- tibble(beta.third.sample) %>%
summarize(mean = mean(beta.third.sample),
variance = var(beta.third.sample),
skewness = skewness(beta.third.sample),
excess_kurtosis = kurtosis(beta.third.sample))
#fourth distribution
beta.fourth.sample <- rbeta(n = sample.size,  # sample size
shape1 = alpha.fourth,   # alpha parameter
shape2 = beta.fourth)    # beta parameter
#plot the histogram for distribution
beta.fourth.hist <- ggplot()+
geom_histogram(data = tibble(beta.fourth.sample), aes(x = beta.fourth.sample, y=after_stat(density)),
color = "black", fill = "lightgray")+ #plot histogram
#plot sample density
geom_density(data = tibble(beta.fourth.sample), aes(x = beta.fourth.sample, y=after_stat(density), color="BetaSample(0.50,0.50)"))+
#plot actual Beta density
geom_line(data = fourth.dist, aes(x = x, y=beta.pdf, color="Beta(0.50,0.50)"))+
theme_bw()+
labs(
title = "Histogram and Estimated Density of Beta Sample",
x = "Sample of Beta Distribution",
y = "Density"
)+
scale_color_manual( #complete the legend
name = "Density",
values = c("BetaSample(0.50,0.50)" = "red", "Beta(0.50,0.50)" = "blue"),
labels = c("Beta Population", "Beta Sample"))+
theme(legend.position = "bottom")
#include numerical summaries
beta.fourth.summary <- tibble(beta.fourth.sample) %>%
summarize(mean = mean(beta.fourth.sample),
variance = var(beta.fourth.sample),
skewness = skewness(beta.fourth.sample),
excess_kurtosis = kurtosis(beta.fourth.sample))
#task four
#compute cumulative summaries for beta(2,5)
cum.mean <- cummean(beta.first.sample) #cumulative mean
cum.var <- cumvar(beta.first.sample) #cumulative variance
cum.skew <- cumskew(beta.first.sample) #cumulative skewness
cum.kurt <- cumkurt(beta.first.sample) -3 #cumulative kurtosis
mean.plot <- ggplot(data = tibble(beta.first.sample))+ #plot for cumulative mean
geom_line(aes(x=1:500, y = cum.mean), na.rm = T)+
theme_bw()+
geom_hline(yintercept=mean.first)+  #add true value from task one
labs(x = "Sample size",
y = "Cumulative mean")
var.plot <- ggplot(data = tibble(beta.first.sample))+ #plot for cumulative variance
geom_line(aes(x=1:500, y = cum.var), na.rm = T)+
theme_bw()+
geom_hline(yintercept=var.first)+  #add true value from task one
labs(x = "Sample size",
y = "Cumulative variance")
skew.plot <- ggplot(data = tibble(beta.first.sample))+ #plot for cumulative skewness
geom_line(aes(x=1:500, y = cum.skew), na.rm = T)+
theme_bw()+
geom_hline(yintercept=skew.first)+  #add true value from task one
labs(x = "Sample size",
y = "Cumulative skewness")
kurt.plot <- ggplot(data = tibble(beta.first.sample))+  #plot for cumulative kurtosis
geom_line(aes(x=1:500, y = cum.kurt), na.rm = T)+
theme_bw()+
geom_hline(yintercept=kurt.first)+  #add true value from task one
labs(x = "Sample size",
y = "Cumulative kurtosis")
#combine the plots
combined.plots <- (mean.plot + var.plot)/(skew.plot+kurt.plot)
#do the loop iteration to simulate new data
for (i in 2:50){
set.seed(7272+i) #set the seed
beta.sample <- rbeta(n = sample.size,  # sample size
shape1 = alpha.first,   # alpha parameter
shape2 = beta.first)    # beta parameter
new.data <- tibble( #create tibble with cumulative summaries
index = 1:sample.size,
mean = cummean(beta.sample),
variance = cumvar(beta.sample),
skewness = cumskew(beta.sample),
kurtosis = cumkurt(beta.sample) -3
)
#Add new line for cumulative statistics
mean.plot <- mean.plot +
geom_line(data = new.data, aes(x=index, y= mean), color =i, na.rm = T)
var.plot <- var.plot +
geom_line(data = new.data, aes(x=index, y= variance), color =i, na.rm = T)
skew.plot <- skew.plot +
geom_line(data = new.data, aes(x=index, y= skewness), color =i, na.rm = T)
kurt.plot <- kurt.plot +
geom_line(data = new.data, aes(x=index, y= kurtosis), color =i, na.rm = T)
}
#combine all new plots together
combined.plots.new.sample <- (mean.plot + var.plot)/(skew.plot+kurt.plot)
#Task 5
num.iterations <- 1000
#vectors to store statistics of interest
mean.vector = rep(NA, num.iterations)
var.vector = rep(NA, num.iterations)
skew.vector = rep(NA, num.iterations)
kurt.vector = rep(NA, num.iterations)
#do a for loop for 1000 samples
for (i in 1:num.iterations){
set.seed(7272+i) #set seed to work with same samples
#simulate new distribution
beta.sample <- rbeta(n = sample.size,  # sample size
shape1 = alpha.first,   # alpha parameter
shape2 = beta.first)    # beta parameter
#compute statistics for the new distribution
mean.vector[i] <- mean(beta.sample)
var.vector[i] <-var(beta.sample)
skew.vector[i] <- skewness(beta.sample)
kurt.vector[i] <- kurtosis(beta.sample)
}
#create tibble to plot the data
beta.tibble <- tibble(
mean = mean.vector,
variance = var.vector,
skewness = skew.vector,
kurtosis = kurt.vector)
#plot histogram for each statistics
#plot a histogram for mean
mean.hist <- ggplot()+
geom_histogram(data = beta.tibble, aes(x= mean, y = ..density..),
fill = "lightblue", color = "black")+ #create a histogram
theme_bw()+ #put white background
geom_density(data = beta.tibble, aes (x= mean, color = "Density"))+ #create a density line
scale_color_manual(name = "Legend", values = c("Density" = "red")) + #create a legend
labs(x = "Mean",
y = "Density",
title = "Sampling Distibution of Mean")
#plot a histogram for variance
var.hist <- ggplot()+
geom_histogram(data = beta.tibble, aes(x= variance, y = ..density..),
fill = "lightblue", color = "black")+ #create a histogram
theme_bw()+ #put white background
geom_density(data = beta.tibble, aes (x= variance, color = "Density"))+ #create a density line
scale_color_manual(name = "Legend", values = c("Density" = "red")) + #create a legend
labs(x = "Variance",
y = "Density",
title = "Sampling Distibution of Variance")
#plot a histogram for skewness
skew.hist <- ggplot()+
geom_histogram(data = beta.tibble, aes(x= skewness, y = ..density..),
fill = "lightblue", color = "black")+ #create a histogram
theme_bw()+ #put white background
geom_density(data = beta.tibble, aes (x= skewness, color = "Density"))+ #create a density line
scale_color_manual(name = "Legend", values = c("Density" = "red")) + #create a legend
labs(x = "Skewness",
y = "Density",
title = "Sampling Distibution of Skewness")
#plot a histogram for kurtosis
kurt.hist <- ggplot()+
geom_histogram(data = beta.tibble, aes(x= kurtosis, y = ..density..),
fill = "lightblue", color = "black")+ #create a histogram
theme_bw()+ #put white background
geom_density(data = beta.tibble, aes (x= kurtosis, color = "Density"))+ #create a density line
scale_color_manual(name = "Legend", values = c("Density" = "red")) + #create a legend
labs(x = "Kurtosis",
y = "Density",
title = "Sampling Distibution of Kurtosis")
kurt.hist
kurtosis(rnorm(1000))
#plot a histogram for kurtosis
kurt.hist <- ggplot()+
geom_histogram(data = beta.tibble, aes(x= kurtosis, y = ..density..),
fill = "lightblue", color = "black")+ #create a histogram
theme_bw()+ #put white background
stat_density(data = beta.tibble,
aes (x= kurtosis, color = "Density"),
geom="line")+ #create a density line
scale_color_manual(name = "Legend", values = c("Density" = "red")) + #create a legend
labs(x = "Kurtosis",
y = "Density",
title = "Sampling Distibution of Kurtosis")
kurt.hist
View(first.dist)
#plot a histogram for variance
var.hist <- ggplot()+
geom_histogram(data = beta.tibble, aes(x= variance, y = ..density..),
fill = "lightblue", color = "black")+ #create a histogram
theme_bw()+ #put white background
geom_density(data = beta.tibble, aes (x= variance), color = "red")+ #create a density line
labs(x = "Variance",
y = "Density",
title = "Sampling Distibution of Variance")
var.hist
#plot a histogram for kurtosis
kurt.hist <- ggplot()+
geom_histogram(data = beta.tibble, aes(x= kurtosis, y = ..density..),
fill = "lightblue", color = "black")+ #create a histogram
theme_bw()+ #put white background
stat_density(data = beta.tibble,
aes (x= kurtosis),
color = "Density")+ #create a density line
labs(x = "Kurtosis",
y = "Density",
title = "Sampling Distibution of Kurtosis")
kurt.hist
#plot a histogram for kurtosis
kurt.hist <- ggplot()+
#plot a histogram for kurtosis
kurt.hist <- ggplot()+
geom_histogram(data = beta.tibble, aes(x= kurtosis, y = ..density..),
fill = "lightblue", color = "black")+ #create a histogram
theme_bw()+ #put white background
stat_density(data = beta.tibble,
aes (x= kurtosis),
color = "red")+ #create a density line
labs(x = "Kurtosis",
y = "Density",
title = "Sampling Distibution of Kurtosis")
kurt.hist
#plot a histogram for kurtosis
kurt.hist <- ggplot()+
geom_histogram(data = beta.tibble, aes(x= kurtosis, y = ..density..),
fill = "lightblue", color = "black")+ #create a histogram
theme_bw()+ #put white background
stat_density(data = beta.tibble,
aes (x= kurtosis),
color = "red")+ #create a density line
labs(x = "Kurtosis",
y = "Density",
title = "Sampling Distibution of Kurtosis")
kurt.hist
#plot a histogram for kurtosis
kurt.hist <- ggplot()+
geom_histogram(data = beta.tibble, aes(x= kurtosis, y = ..density..),
fill = "lightblue", color = "black")+ #create a histogram
theme_bw()+ #put white background
geom_density(data = beta.tibble,
aes (x= kurtosis),
color = "red")+ #create a density line
labs(x = "Kurtosis",
y = "Density",
title = "Sampling Distibution of Kurtosis")
kurt.hist
#plot histogram for each statistics
#plot a histogram for mean
mean.hist <- ggplot()+
geom_histogram(data = beta.tibble, aes(x= mean, y = ..density..),
fill = "lightblue", color = "black")+ #create a histogram
theme_bw()+ #put white background
geom_density(data = beta.tibble, aes (x= mean), , color = "red")+ #create a density line
labs(x = "Mean",
y = "Density",
title = "Sampling Distibution of Mean")
#plot a histogram for variance
var.hist <- ggplot()+
geom_histogram(data = beta.tibble, aes(x= variance, y = ..density..),
fill = "lightblue", color = "black")+ #create a histogram
theme_bw()+ #put white background
geom_density(data = beta.tibble, aes (x= variance), color = "red")+ #create a density line
labs(x = "Variance",
y = "Density",
title = "Sampling Distibution of Variance")
#plot a histogram for skewness
skew.hist <- ggplot()+
geom_histogram(data = beta.tibble, aes(x= skewness, y = ..density..),
fill = "lightblue", color = "black")+ #create a histogram
theme_bw()+ #put white background
geom_density(data = beta.tibble, aes (x= skewness), color = "red")+ #create a density line
labs(x = "Skewness",
y = "Density",
title = "Sampling Distibution of Skewness")
#plot a histogram for kurtosis
kurt.hist <- ggplot()+
geom_histogram(data = beta.tibble, aes(x= kurtosis, y = ..density..),
fill = "lightblue", color = "black")+ #create a histogram
theme_bw()+ #put white background
geom_density(data = beta.tibble,
aes (x= kurtosis),
color = "red")+ #create a density line
labs(x = "Kurtosis",
y = "Density",
title = "Sampling Distibution of Kurtosis")
mean.hist
var.hist
skew.hist
kurt.hist
